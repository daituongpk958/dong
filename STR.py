import streamlit as st
import geopandas as gpd
import tempfile, zipfile, os
import leafmap.foliumap as leafmap
import pandas as pd
st.set_page_config(page_title="H·ªá th·ªëng ki·ªÉm tra GML", page_icon="üåç", layout="wide")

# ================== CSS ·∫¢NH N·ªÄN ==================
st.markdown("""
    <style>
    .stApp {
        background-image: url("https://images.unsplash.com/photo-1502920514313-52581002a659");
        background-size: cover;
        background-position: center;
        background-attachment: fixed;
    }
    .stApp::before {
        content: "";
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background-color: rgba(255, 255, 255, 0.7);
        z-index: 0;
    }
    .block-container {
        position: relative;
        z-index: 1;
    }
    </style>
""", unsafe_allow_html=True)

# ================== HEADER ==================
st.title("üåç H·ªá th·ªëng Ki·ªÉm so√°t d·ªØ li·ªáu")
st.markdown("### üöÄ ·ª®ng d·ª•ng h·ªó tr·ª£ ki·ªÉm tra d·ªØ li·ªáu b·∫£n ƒë·ªì h√†nh ch√≠nh")

# ================== SIDEBAR ==================
menu = ["üîé Ki·ªÉm tra d·ªØ li·ªáu ki·ªÉm k√™ 2024",
        "üóÇÔ∏è Ki·ªÉm tra ti·∫øp bi√™n GML trong ƒë∆°n v·ªã h√†nh ch√≠nh",
        "üìÅ Document Files",
        "‚ÑπÔ∏è About"]

choice = st.sidebar.radio("Menu:", menu)

if choice == menu[0]:
    st.subheader("üîé Ki·ªÉm tra d·ªØ li·ªáu ki·ªÉm k√™ 2024")
    st.info("üëâ Upload ƒë·ªß c√°c file `.shp`, `.dbf`, `.shx`, `.prj` ƒë·ªÉ ki·ªÉm tra")

    uploaded_files = st.file_uploader(
        "T·∫£i shapefile (c√≥ th·ªÉ ch·ªçn nhi·ªÅu shapefile c√πng l√∫c)",
        type=["shp", "dbf", "shx", "prj"],
        accept_multiple_files=True
    )

    if uploaded_files:
        with tempfile.TemporaryDirectory() as tmpdir:
            # L∆∞u t·∫•t c·∫£ file v√†o th∆∞ m·ª•c t·∫°m
            for file in uploaded_files:
                file_path = os.path.join(tmpdir, file.name)
                with open(file_path, "wb") as f:
                    f.write(file.getbuffer())

            # T√¨m t·∫•t c·∫£ file .shp trong th∆∞ m·ª•c
            shp_files = [f for f in os.listdir(tmpdir) if f.endswith(".shp")]

            if not shp_files:
                st.error("‚ùå Kh√¥ng t√¨m th·∫•y file `.shp` n√†o")
            else:
                m = leafmap.Map(google_map="SATELLITE")
                all_gdfs = []

                for shp in shp_files:
                    shp_path = os.path.join(tmpdir, shp)
                    try:
                        gdf = gpd.read_file(shp_path)

                        # CRS VN2000 Cao B·∫±ng (105¬∞45‚Ä≤)
                        proj4 = (
                            "+proj=tmerc +lat_0=0 +lon_0=105.75 +k=0.9999 "
                            "+x_0=500000 +y_0=0 +ellps=WGS84 "
                            "+towgs84=-191.90441429,-39.30318279,-111.45032835,"
                            "-0.00928836,-0.01975479,0.00427372,0.252906278 "
                            "+units=m +no_defs"
                        )

                        if gdf.crs is None:
                            gdf = gdf.set_crs(proj4).to_crs(epsg=4326)
                        else:
                            gdf = gdf.to_crs(epsg=4326)

                        gdf = gdf[gdf.is_valid]
                        all_gdfs.append(gdf)

                        layer_name = shp.replace(".shp", "")
                        m.add_gdf(gdf, layer_name=layer_name, info_mode=None)

                        st.success(f"‚úÖ ƒê·ªçc th√†nh c√¥ng: {shp}, s·ªë ƒë·ªëi t∆∞·ª£ng: {len(gdf)}")

                    except Exception as e:
                        st.error(f"‚ùå L·ªói khi ƒë·ªçc {shp}: {e}")

                # ===== üîé T√¨m & Zoom theo thu·ªôc t√≠nh =====
                if uploaded_files:
                    with tempfile.TemporaryDirectory() as tmpdir:
                        # L∆∞u t·∫•t c·∫£ file v√†o th∆∞ m·ª•c t·∫°m
                        for file in uploaded_files:
                            file_path = os.path.join(tmpdir, file.name)
                            with open(file_path, "wb") as f:
                                f.write(file.getbuffer())

                        # T√¨m t·∫•t c·∫£ file .shp trong th∆∞ m·ª•c
                        shp_files = [f for f in os.listdir(tmpdir) if f.endswith(".shp")]

                        if not shp_files:
                            st.error("‚ùå Kh√¥ng t√¨m th·∫•y file `.shp` n√†o")
                        else:
                            m = leafmap.Map(google_map="SATELLITE")
                            all_gdfs = []

                            for shp in shp_files:
                                shp_path = os.path.join(tmpdir, shp)
                                try:
                                    gdf = gpd.read_file(shp_path)

                                    # CRS VN2000 Cao B·∫±ng (105¬∞45‚Ä≤)
                                    proj4 = (
                                        "+proj=tmerc +lat_0=0 +lon_0=105.75 +k=0.9999 "
                                        "+x_0=500000 +y_0=0 +ellps=WGS84 "
                                        "+towgs84=-191.90441429,-39.30318279,-111.45032835,"
                                        "-0.00928836,-0.01975479,0.00427372,0.252906278 "
                                        "+units=m +no_defs"
                                    )

                                    if gdf.crs is None:
                                        gdf = gdf.set_crs(proj4).to_crs(epsg=4326)
                                    else:
                                        gdf = gdf.to_crs(epsg=4326)

                                    gdf = gdf[gdf.is_valid]
                                    all_gdfs.append(gdf)

                                    layer_name = shp.replace(".shp", "")
                                    m.add_gdf(gdf, layer_name=layer_name, info_mode=None)

                                    st.success(f"‚úÖ ƒê·ªçc th√†nh c√¥ng: {shp}, s·ªë ƒë·ªëi t∆∞·ª£ng: {len(gdf)}")

                                except Exception as e:
                                    st.error(f"‚ùå L·ªói khi ƒë·ªçc {shp}: {e}")

                            # ===== üîé T√¨m & Zoom theo thu·ªôc t√≠nh =====
                            if all_gdfs:
                                combined = pd.concat(all_gdfs, ignore_index=True)

                                st.subheader("üîé T√¨m v√† zoom t·ªõi th·ª≠a ƒë·∫•t")

                                # --- Combobox ch·ªçn tr∆∞·ªùng ---
                                field_name = st.selectbox(
                                    "Ch·ªçn tr∆∞·ªùng d·ªØ li·ªáu ƒë·ªÉ t√¨m:",
                                    options=[c for c in combined.columns if c != "geometry"]
                                )

                                # --- Input nh·∫≠p gi√° tr·ªã ---
                                search_value = st.text_input("Nh·∫≠p gi√° tr·ªã c·∫ßn t√¨m:")

                                if search_value:
                                    target = combined[combined[field_name].astype(str) == search_value]

                                    if not target.empty:
                                        # Style th·ª≠a ƒë∆∞·ª£c t√¨m th·∫•y (ƒë·ªè, vi·ªÅn ƒëen, trong su·ªët)
                                        style_red = lambda x: {
                                            "color": "black",  # vi·ªÅn ƒëen
                                            "weight": 2,
                                            "fillColor": "red",  # t√¥ ƒë·ªè
                                            "fillOpacity": 0.6
                                        }

                                        # Th√™m l·ªõp highlight ri√™ng
                                        m.add_gdf(
                                            target,
                                            layer_name=f"üî¥ {field_name}={search_value}",
                                            style_function=style_red,
                                            info_mode=None
                                        )

                                        # Zoom ƒë√∫ng v√†o th·ª≠a t√¨m ƒë∆∞·ª£c
                                        m.zoom_to_gdf(target)
                                        st.success(f"‚úÖ ƒê√£ zoom v√† highlight {field_name} = {search_value}")
                                    else:
                                        st.warning(f"‚ö†Ô∏è Kh√¥ng t√¨m th·∫•y {field_name} = {search_value}")

                            m.to_streamlit(height=600)




elif choice == menu[1]:
    st.subheader("üóÇÔ∏è Ki·ªÉm tra ti·∫øp bi√™n GML trong ƒë∆°n v·ªã h√†nh ch√≠nh")
    st.warning("‚ö†Ô∏è Ch·ª©c nƒÉng ƒëang ph√°t tri·ªÉn...")

elif choice == menu[2]:
    st.subheader("üìÅ Document Files")
    st.write("Danh s√°ch t√†i li·ªáu, h∆∞·ªõng d·∫´n s·ª≠ d·ª•ng...")

else:
    st.subheader("‚ÑπÔ∏è About")
    st.write("·ª®ng d·ª•ng demo b·∫±ng **Streamlit**, h·ªó tr·ª£ x·ª≠ l√Ω GML, b·∫£n ƒë·ªì...")

# ================== FOOTER ==================
st.markdown("---")
st.markdown("üí° *Ph√°t tri·ªÉn b·ªüi Kim Dong | Streamlit + Python*")
